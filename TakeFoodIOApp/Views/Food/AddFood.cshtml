@using TakeFoodIOApp.Data.Models;
@model Food

@{
    ViewData["Title"] = "AddFood";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Food Add Page</h2>
<br />
@using (Html.BeginForm("AddFood", "Food", FormMethod.Post))
{
    @Html.Label("Food Name")
    @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Name, "", new { @style = "color:red" })
    <br />
    @Html.Label("Stock")
    @Html.TextBoxFor(x => x.Stock, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Stock, "", new { @style = "color:red" })
    <br />
    @Html.Label("Price")
    @Html.TextBoxFor(x => x.Price, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Price, "", new { @style = "color:red" })
    <br />
    @Html.Label("Image URL")
    @Html.TextBoxFor(x => x.ImageURL, new { @class = "form-control" })
    @*@Html.ValidationMessageFor(x => x.ImageURL, "", new { @style = "color:red" })*@
    <br />
    @Html.Label("Category")
    @Html.DropDownListFor(x => x.CategoryId, (List<SelectListItem>)ViewBag.v1, new { @class = "form-control" })
   
    <br />
    @Html.Label("Description")
    @Html.TextAreaFor(x => x.Description, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Description, "", new { @style = "color:red" })
    <br />

    <button class="btn btn-primary">Save</button>
}
