
@using TakeFoodIOApp.Data.Models;
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@model IPagedList<Food>

@{
    ViewData["Title"] = "FoodListPage";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<h2>Food List</h2>
<br />
<table class="table table-bordered">
    <tr>
        <th>ID</th>
        <th>Food Name</th>
        <th>Price(Kg/$)</th>
        <th>Stock(Kg)</th>
        <th>Category Name</th>
        <th>Delete</th>
        <th>Update</th>
        <th>Details</th>
    </tr>

    @foreach (var f in Model)
    {
        <tr>
            <td>@f.FoodId</td>
            <td>@f.Name</td>
            <th>@f.Price</th>
            <th>@f.Stock</th>
            <td>@f.Category.CategoryName</td>
            <td><a href="/Food/DeleteFood/@f.FoodId" class="btn btn-danger">Delete</a></td>
            <td><a href="/Food/FoodGet/@f.FoodId" class="btn btn-warning">Update</a></td>
            <td><a href="#" class="btn btn-info">Details</a></td>
        </tr>
    }
</table>

@*added for pagination*@
@Html.PagedListPager((IPagedList)Model, page => Url.Action("FoodListPage", new { page }), new PagedListRenderOptionsBase 
                                                                            { LiElementClasses = new string[] { "page-item" },
                                                                              PageClasses = new string[] { "page-link" },
                                                                              Display = PagedListDisplayMode.IfNeeded }))

<a href="/Food/AddFood/" class="btn btn-primary">New Food</a>
